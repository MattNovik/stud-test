{"id":"zCYT","dependencies":[{"name":"C:\\projects\\stud-test\\package.json","includedInParent":true,"mtime":1672313724264},{"name":"C:\\projects\\stud-test\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1666601426036},{"name":"./_baseIsEqual","loc":{"line":1,"column":26,"index":26},"parent":"C:\\projects\\stud-test\\node_modules\\lodash\\_baseMatchesProperty.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash\\_baseIsEqual.js"},{"name":"./get","loc":{"line":2,"column":18,"index":63},"parent":"C:\\projects\\stud-test\\node_modules\\lodash\\_baseMatchesProperty.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash\\get.js"},{"name":"./hasIn","loc":{"line":3,"column":20,"index":93},"parent":"C:\\projects\\stud-test\\node_modules\\lodash\\_baseMatchesProperty.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash\\hasIn.js"},{"name":"./_isKey","loc":{"line":4,"column":20,"index":125},"parent":"C:\\projects\\stud-test\\node_modules\\lodash\\_baseMatchesProperty.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash\\_isKey.js"},{"name":"./_isStrictComparable","loc":{"line":5,"column":33,"index":171},"parent":"C:\\projects\\stud-test\\node_modules\\lodash\\_baseMatchesProperty.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash\\_isStrictComparable.js"},{"name":"./_matchesStrictComparable","loc":{"line":6,"column":38,"index":235},"parent":"C:\\projects\\stud-test\\node_modules\\lodash\\_baseMatchesProperty.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash\\_matchesStrictComparable.js"},{"name":"./_toKey","loc":{"line":7,"column":20,"index":286},"parent":"C:\\projects\\stud-test\\node_modules\\lodash\\_baseMatchesProperty.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash\\_toKey.js"}],"generated":{"js":"var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n"},"sourceMaps":null,"error":null,"hash":"9e50b24fc06e361c56765e3585c9f1e5","cacheData":{"env":{}}}