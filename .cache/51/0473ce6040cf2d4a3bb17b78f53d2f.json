{"id":"TpTM","dependencies":[{"name":"C:\\projects\\stud-test\\package.json","includedInParent":true,"mtime":1672313724264},{"name":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\InputUnstyled\\package.json","includedInParent":true,"mtime":1666601424725},{"name":"@babel/runtime/helpers/esm/extends","loc":{"line":1,"column":21,"index":21},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\InputUnstyled\\InputUnstyled.js","resolved":"C:\\projects\\stud-test\\node_modules\\@babel\\runtime\\helpers\\esm\\extends.js"},{"name":"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose","loc":{"line":2,"column":42,"index":101},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\InputUnstyled\\InputUnstyled.js","resolved":"C:\\projects\\stud-test\\node_modules\\@babel\\runtime\\helpers\\esm\\objectWithoutPropertiesLoose.js"},{"name":"react","loc":{"line":4,"column":23,"index":596},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\InputUnstyled\\InputUnstyled.js","resolved":"C:\\projects\\stud-test\\node_modules\\react\\index.js"},{"name":"prop-types","loc":{"line":5,"column":22,"index":627},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\InputUnstyled\\InputUnstyled.js","resolved":"C:\\projects\\stud-test\\node_modules\\prop-types\\index.js"},{"name":"../utils/isHostComponent","loc":{"line":6,"column":28,"index":669},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\InputUnstyled\\InputUnstyled.js","resolved":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\utils\\isHostComponent.js"},{"name":"./inputUnstyledClasses","loc":{"line":7,"column":20,"index":717},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\InputUnstyled\\InputUnstyled.js","resolved":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\InputUnstyled\\inputUnstyledClasses.js"},{"name":"./useInput","loc":{"line":8,"column":21,"index":764},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\InputUnstyled\\InputUnstyled.js","resolved":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\InputUnstyled\\useInput.js"},{"name":"../utils","loc":{"line":9,"column":29,"index":807},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\InputUnstyled\\InputUnstyled.js","resolved":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\utils\\index.js"},{"name":"react/jsx-runtime","loc":{"line":22,"column":30,"index":1061},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\InputUnstyled\\InputUnstyled.js","resolved":"C:\\projects\\stud-test\\node_modules\\react\\jsx-runtime.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/esm/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _isHostComponent = _interopRequireDefault(require(\"../utils/isHostComponent\"));\n\nvar _inputUnstyledClasses = _interopRequireDefault(require(\"./inputUnstyledClasses\"));\n\nvar _useInput = _interopRequireDefault(require(\"./useInput\"));\n\nvar _utils = require(\"../utils\");\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst _excluded = [\"aria-describedby\", \"aria-label\", \"aria-labelledby\", \"autoComplete\", \"autoFocus\", \"className\", \"component\", \"components\", \"componentsProps\", \"defaultValue\", \"disabled\", \"endAdornment\", \"error\", \"id\", \"multiline\", \"name\", \"onClick\", \"onChange\", \"onKeyDown\", \"onKeyUp\", \"onFocus\", \"onBlur\", \"placeholder\", \"readOnly\", \"required\", \"startAdornment\", \"value\", \"type\", \"rows\", \"minRows\", \"maxRows\"];\nconst InputUnstyled = /*#__PURE__*/React.forwardRef(function InputUnstyled(props, forwardedRef) {\n  var _ref, _components$Textarea, _components$Input;\n\n  const {\n    'aria-describedby': ariaDescribedby,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby,\n    autoComplete,\n    autoFocus,\n    className,\n    component,\n    components = {},\n    componentsProps = {},\n    defaultValue,\n    disabled,\n    endAdornment,\n    error,\n    id,\n    multiline = false,\n    name,\n    onClick,\n    onChange,\n    onKeyDown,\n    onKeyUp,\n    onFocus,\n    onBlur,\n    placeholder,\n    readOnly,\n    required,\n    startAdornment,\n    value,\n    type: typeProp,\n    rows,\n    minRows,\n    maxRows\n  } = props,\n        other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);\n  const {\n    getRootProps,\n    getInputProps,\n    focused,\n    formControlContext,\n    error: errorState,\n    disabled: disabledState\n  } = (0, _useInput.default)({\n    disabled,\n    defaultValue,\n    error,\n    onBlur,\n    onClick,\n    onChange,\n    onFocus,\n    required,\n    value\n  });\n  const type = !multiline ? typeProp != null ? typeProp : 'text' : undefined;\n  const ownerState = (0, _extends2.default)({}, props, {\n    disabled: disabledState,\n    error: errorState,\n    focused,\n    formControlContext,\n    multiline,\n    type\n  });\n  const rootStateClasses = {\n    [_inputUnstyledClasses.default.disabled]: disabledState,\n    [_inputUnstyledClasses.default.error]: errorState,\n    [_inputUnstyledClasses.default.focused]: focused,\n    [_inputUnstyledClasses.default.formControl]: Boolean(formControlContext),\n    [_inputUnstyledClasses.default.multiline]: multiline,\n    [_inputUnstyledClasses.default.adornedStart]: Boolean(startAdornment),\n    [_inputUnstyledClasses.default.adornedEnd]: Boolean(endAdornment)\n  };\n  const inputStateClasses = {\n    [_inputUnstyledClasses.default.disabled]: disabledState,\n    [_inputUnstyledClasses.default.multiline]: multiline\n  };\n  const propsToForward = {\n    'aria-describedby': ariaDescribedby,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby,\n    autoComplete,\n    autoFocus,\n    id,\n    onKeyDown,\n    onKeyUp,\n    name,\n    placeholder,\n    readOnly,\n    type\n  };\n  const Root = (_ref = component != null ? component : components.Root) != null ? _ref : 'div';\n  const rootProps = (0, _utils.useSlotProps)({\n    elementType: Root,\n    getSlotProps: getRootProps,\n    externalSlotProps: componentsProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref: forwardedRef\n    },\n    ownerState,\n    className: [_inputUnstyledClasses.default.root, rootStateClasses, className]\n  });\n  const Input = multiline ? (_components$Textarea = components.Textarea) != null ? _components$Textarea : 'textarea' : (_components$Input = components.Input) != null ? _components$Input : 'input';\n  const inputProps = (0, _utils.useSlotProps)({\n    elementType: Input,\n    getSlotProps: otherHandlers => getInputProps((0, _extends2.default)({}, otherHandlers, propsToForward)),\n    externalSlotProps: componentsProps.input,\n    additionalProps: (0, _extends2.default)({\n      rows: multiline ? rows : undefined\n    }, multiline && !(0, _isHostComponent.default)(Input) && {\n      minRows: rows || minRows,\n      maxRows: rows || maxRows\n    }),\n    ownerState,\n    className: [_inputUnstyledClasses.default.input, inputStateClasses]\n  });\n\n  if (\"production\" !== 'production') {\n    if (multiline) {\n      if (rows) {\n        if (minRows || maxRows) {\n          console.warn('MUI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set.');\n        }\n      }\n    }\n  }\n\n  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(Root, (0, _extends2.default)({}, rootProps, {\n    children: [startAdornment, /*#__PURE__*/(0, _jsxRuntime.jsx)(Input, (0, _extends2.default)({}, inputProps)), endAdornment]\n  }));\n});\n\"production\" !== \"production\" ? InputUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  'aria-describedby': _propTypes.default.string,\n\n  /**\n   * @ignore\n   */\n  'aria-label': _propTypes.default.string,\n\n  /**\n   * @ignore\n   */\n  'aria-labelledby': _propTypes.default.string,\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: _propTypes.default.string,\n\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: _propTypes.default.bool,\n\n  /**\n   * @ignore\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Class name applied to the root element.\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: _propTypes.default.elementType,\n\n  /**\n   * The components used for each slot inside the InputBase.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: _propTypes.default.shape({\n    Input: _propTypes.default.elementType,\n    Root: _propTypes.default.elementType,\n    Textarea: _propTypes.default.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Input.\n   * @default {}\n   */\n  componentsProps: _propTypes.default.shape({\n    input: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),\n    root: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object])\n  }),\n\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: _propTypes.default.any,\n\n  /**\n   * If `true`, the component is disabled.\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\n   */\n  disabled: _propTypes.default.bool,\n\n  /**\n   * Trailing adornment for this input.\n   */\n  endAdornment: _propTypes.default.node,\n\n  /**\n   * If `true`, the `input` will indicate an error.\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\n   */\n  error: _propTypes.default.bool,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: _propTypes.default.string,\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: _propTypes.default.number,\n\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  minRows: _propTypes.default.number,\n\n  /**\n   * If `true`, a `textarea` element is rendered.\n   * @default false\n   */\n  multiline: _propTypes.default.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: _propTypes.default.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: _propTypes.default.func,\n\n  /**\n   * @ignore\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * @ignore\n   */\n  onClick: _propTypes.default.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: _propTypes.default.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: _propTypes.default.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: _propTypes.default.func,\n\n  /**\n   * The short hint displayed in the `input` before the user enters a value.\n   */\n  placeholder: _propTypes.default.string,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: _propTypes.default.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\n   */\n  required: _propTypes.default.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: _propTypes.default.number,\n\n  /**\n   * Leading adornment for this input.\n   */\n  startAdornment: _propTypes.default.node,\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   * @default 'text'\n   */\n  type: _propTypes.default\n  /* @typescript-to-proptypes-ignore */\n  .oneOf(['button', 'checkbox', 'color', 'date', 'datetime-local', 'email', 'file', 'hidden', 'image', 'month', 'number', 'password', 'radio', 'range', 'reset', 'search', 'submit', 'tel', 'text', 'time', 'url', 'week']),\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: _propTypes.default.any\n} : void 0;\nvar _default = InputUnstyled;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"af6c45f731cab70017d0777ed4823e55","cacheData":{"env":{"NODE_ENV":"production"}}}