{"id":"pBsv","dependencies":[{"name":"C:\\projects\\stud-test\\package.json","includedInParent":true,"mtime":1672313724264},{"name":"C:\\projects\\stud-test\\node_modules\\lodash-es\\package.json","includedInParent":true,"mtime":1666601424776},{"name":"./_Symbol.js","loc":{"line":1,"column":19,"index":19},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_cloneSymbol.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_Symbol.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _Symbol = _interopRequireDefault(require(\"./_Symbol.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = _Symbol.default ? _Symbol.default.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\n\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nvar _default = cloneSymbol;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"0ba31b0305acf46af30c32b2cde83e9d","cacheData":{"env":{}}}