{"id":"Ov7L","dependencies":[{"name":"C:\\projects\\stud-test\\package.json","includedInParent":true,"mtime":1672313724264},{"name":"C:\\projects\\stud-test\\node_modules\\lodash-es\\package.json","includedInParent":true,"mtime":1666601424776},{"name":"./_mapCacheClear.js","loc":{"line":1,"column":26,"index":26},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_MapCache.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_mapCacheClear.js"},{"name":"./_mapCacheDelete.js","loc":{"line":2,"column":27,"index":76},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_MapCache.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_mapCacheDelete.js"},{"name":"./_mapCacheGet.js","loc":{"line":3,"column":24,"index":124},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_MapCache.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_mapCacheGet.js"},{"name":"./_mapCacheHas.js","loc":{"line":4,"column":24,"index":169},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_MapCache.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_mapCacheHas.js"},{"name":"./_mapCacheSet.js","loc":{"line":5,"column":24,"index":214},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_MapCache.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_mapCacheSet.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _mapCacheClear = _interopRequireDefault(require(\"./_mapCacheClear.js\"));\n\nvar _mapCacheDelete = _interopRequireDefault(require(\"./_mapCacheDelete.js\"));\n\nvar _mapCacheGet = _interopRequireDefault(require(\"./_mapCacheGet.js\"));\n\nvar _mapCacheHas = _interopRequireDefault(require(\"./_mapCacheHas.js\"));\n\nvar _mapCacheSet = _interopRequireDefault(require(\"./_mapCacheSet.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = _mapCacheClear.default;\nMapCache.prototype['delete'] = _mapCacheDelete.default;\nMapCache.prototype.get = _mapCacheGet.default;\nMapCache.prototype.has = _mapCacheHas.default;\nMapCache.prototype.set = _mapCacheSet.default;\nvar _default = MapCache;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"4fe7a8a207916ad390fa1d67763bebaf","cacheData":{"env":{}}}