{"id":"Cvvl","dependencies":[{"name":"C:\\projects\\stud-test\\package.json","includedInParent":true,"mtime":1672313724264},{"name":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\Portal\\package.json","includedInParent":true,"mtime":1666601424761},{"name":"react","loc":{"line":1,"column":23,"index":23},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\Portal\\Portal.js","resolved":"C:\\projects\\stud-test\\node_modules\\react\\index.js"},{"name":"react-dom","loc":{"line":2,"column":26,"index":58},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\Portal\\Portal.js","resolved":"C:\\projects\\stud-test\\node_modules\\react-dom\\index.js"},{"name":"prop-types","loc":{"line":3,"column":22,"index":93},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\Portal\\Portal.js","resolved":"C:\\projects\\stud-test\\node_modules\\prop-types\\index.js"},{"name":"@mui/utils","loc":{"line":4,"column":154,"index":261},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\Portal\\Portal.js","resolved":"C:\\projects\\stud-test\\node_modules\\@mui\\utils\\esm\\index.js"},{"name":"react/jsx-runtime","loc":{"line":5,"column":28,"index":303},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\Portal\\Portal.js","resolved":"C:\\projects\\stud-test\\node_modules\\react\\jsx-runtime.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar ReactDOM = _interopRequireWildcard(require(\"react-dom\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _utils = require(\"@mui/utils\");\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\n/**\n * Portals provide a first-class way to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n */\n\n\nconst Portal = /*#__PURE__*/React.forwardRef(function Portal(props, ref) {\n  const {\n    children,\n    container,\n    disablePortal = false\n  } = props;\n  const [mountNode, setMountNode] = React.useState(null);\n  const handleRef = (0, _utils.unstable_useForkRef)( /*#__PURE__*/React.isValidElement(children) ? children.ref : null, ref);\n  (0, _utils.unstable_useEnhancedEffect)(() => {\n    if (!disablePortal) {\n      setMountNode(getContainer(container) || document.body);\n    }\n  }, [container, disablePortal]);\n  (0, _utils.unstable_useEnhancedEffect)(() => {\n    if (mountNode && !disablePortal) {\n      (0, _utils.unstable_setRef)(ref, mountNode);\n      return () => {\n        (0, _utils.unstable_setRef)(ref, null);\n      };\n    }\n\n    return undefined;\n  }, [ref, mountNode, disablePortal]);\n\n  if (disablePortal) {\n    if ( /*#__PURE__*/React.isValidElement(children)) {\n      return /*#__PURE__*/React.cloneElement(children, {\n        ref: handleRef\n      });\n    }\n\n    return children;\n  }\n\n  return /*#__PURE__*/(0, _jsxRuntime.jsx)(React.Fragment, {\n    children: mountNode ? /*#__PURE__*/ReactDOM.createPortal(children, mountNode) : mountNode\n  });\n});\n\"production\" !== \"production\" ? Portal.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The children to render into the `container`.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: _propTypes.default\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([_utils.HTMLElementType, _propTypes.default.func]),\n\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: _propTypes.default.bool\n} : void 0;\n\nif (\"production\" !== 'production') {\n  // eslint-disable-next-line\n  Portal['propTypes' + ''] = (0, _utils.exactProp)(Portal.propTypes);\n}\n\nvar _default = Portal;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"96c23e8b9227af40e3996167715325c4","cacheData":{"env":{"NODE_ENV":"production"}}}