{"id":"QP0q","dependencies":[{"name":"C:\\projects\\stud-test\\package.json","includedInParent":true,"mtime":1672313724264},{"name":"C:\\projects\\stud-test\\node_modules\\imask\\package.json","includedInParent":true,"mtime":1666601416569},{"name":"../_rollupPluginBabelHelpers-67bba7fb.js","loc":{"line":1,"column":87,"index":87},"parent":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\controls\\input.js","resolved":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\_rollupPluginBabelHelpers-67bba7fb.js"},{"name":"../core/utils.js","loc":{"line":2,"column":42,"index":173},"parent":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\controls\\input.js","resolved":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\core\\utils.js"},{"name":"../core/action-details.js","loc":{"line":3,"column":26,"index":219},"parent":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\controls\\input.js","resolved":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\core\\action-details.js"},{"name":"../masked/date.js","loc":{"line":4,"column":7,"index":255},"parent":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\controls\\input.js","resolved":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\masked\\date.js"},{"name":"../masked/factory.js","loc":{"line":5,"column":40,"index":316},"parent":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\controls\\input.js","resolved":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\masked\\factory.js"},{"name":"./mask-element.js","loc":{"line":6,"column":24,"index":364},"parent":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\controls\\input.js","resolved":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\controls\\mask-element.js"},{"name":"./html-mask-element.js","loc":{"line":7,"column":28,"index":413},"parent":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\controls\\input.js","resolved":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\controls\\html-mask-element.js"},{"name":"./html-contenteditable-mask-element.js","loc":{"line":8,"column":43,"index":482},"parent":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\controls\\input.js","resolved":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\controls\\html-contenteditable-mask-element.js"},{"name":"../core/holder.js","loc":{"line":9,"column":18,"index":542},"parent":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\controls\\input.js","resolved":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\core\\holder.js"},{"name":"../core/change-details.js","loc":{"line":10,"column":7,"index":570},"parent":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\controls\\input.js","resolved":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\core\\change-details.js"},{"name":"../masked/pattern.js","loc":{"line":11,"column":7,"index":606},"parent":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\controls\\input.js","resolved":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\masked\\pattern.js"},{"name":"../masked/base.js","loc":{"line":12,"column":7,"index":637},"parent":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\controls\\input.js","resolved":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\masked\\base.js"},{"name":"../core/continuous-tail-details.js","loc":{"line":13,"column":7,"index":665},"parent":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\controls\\input.js","resolved":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\core\\continuous-tail-details.js"},{"name":"../masked/pattern/input-definition.js","loc":{"line":14,"column":7,"index":710},"parent":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\controls\\input.js","resolved":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\masked\\pattern\\input-definition.js"},{"name":"../masked/pattern/fixed-definition.js","loc":{"line":15,"column":7,"index":758},"parent":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\controls\\input.js","resolved":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\masked\\pattern\\fixed-definition.js"},{"name":"../masked/pattern/chunk-tail-details.js","loc":{"line":16,"column":7,"index":806},"parent":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\controls\\input.js","resolved":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\masked\\pattern\\chunk-tail-details.js"},{"name":"../masked/pattern/cursor.js","loc":{"line":17,"column":7,"index":856},"parent":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\controls\\input.js","resolved":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\masked\\pattern\\cursor.js"},{"name":"../masked/regexp.js","loc":{"line":18,"column":7,"index":894},"parent":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\controls\\input.js","resolved":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\masked\\regexp.js"},{"name":"../masked/range.js","loc":{"line":19,"column":7,"index":924},"parent":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\controls\\input.js","resolved":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\masked\\range.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rollupPluginBabelHelpers67bba7fb = require(\"../_rollupPluginBabelHelpers-67bba7fb.js\");\n\nvar _utils = require(\"../core/utils.js\");\n\nvar _actionDetails = _interopRequireDefault(require(\"../core/action-details.js\"));\n\nrequire(\"../masked/date.js\");\n\nvar _factory = _interopRequireWildcard(require(\"../masked/factory.js\"));\n\nvar _maskElement = _interopRequireDefault(require(\"./mask-element.js\"));\n\nvar _htmlMaskElement = _interopRequireDefault(require(\"./html-mask-element.js\"));\n\nvar _htmlContenteditableMaskElement = _interopRequireDefault(require(\"./html-contenteditable-mask-element.js\"));\n\nvar _holder = _interopRequireDefault(require(\"../core/holder.js\"));\n\nrequire(\"../core/change-details.js\");\n\nrequire(\"../masked/pattern.js\");\n\nrequire(\"../masked/base.js\");\n\nrequire(\"../core/continuous-tail-details.js\");\n\nrequire(\"../masked/pattern/input-definition.js\");\n\nrequire(\"../masked/pattern/fixed-definition.js\");\n\nrequire(\"../masked/pattern/chunk-tail-details.js\");\n\nrequire(\"../masked/pattern/cursor.js\");\n\nrequire(\"../masked/regexp.js\");\n\nrequire(\"../masked/range.js\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _excluded = [\"mask\"];\n/** Listens to element events and controls changes between element and {@link Masked} */\n\nvar InputMask = /*#__PURE__*/function () {\n  /**\n    View element\n    @readonly\n  */\n\n  /**\n    Internal {@link Masked} model\n    @readonly\n  */\n\n  /**\n    @param {MaskElement|HTMLInputElement|HTMLTextAreaElement} el\n    @param {Object} opts\n  */\n  function InputMask(el, opts) {\n    (0, _rollupPluginBabelHelpers67bba7fb.a)(this, InputMask);\n    this.el = el instanceof _maskElement.default ? el : el.isContentEditable && el.tagName !== 'INPUT' && el.tagName !== 'TEXTAREA' ? new _htmlContenteditableMaskElement.default(el) : new _htmlMaskElement.default(el);\n    this.masked = (0, _factory.default)(opts);\n    this._listeners = {};\n    this._value = '';\n    this._unmaskedValue = '';\n    this._saveSelection = this._saveSelection.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._onChange = this._onChange.bind(this);\n    this._onDrop = this._onDrop.bind(this);\n    this._onFocus = this._onFocus.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this.alignCursor = this.alignCursor.bind(this);\n    this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\n\n    this._bindEvents(); // refresh\n\n\n    this.updateValue();\n\n    this._onChange();\n  }\n  /** Read or update mask */\n\n\n  (0, _rollupPluginBabelHelpers67bba7fb._)(InputMask, [{\n    key: \"mask\",\n    get: function get() {\n      return this.masked.mask;\n    },\n    set: function set(mask) {\n      if (this.maskEquals(mask)) return; // $FlowFixMe No ideas ... after update\n\n      if (!(mask instanceof _holder.default.Masked) && this.masked.constructor === (0, _factory.maskedClass)(mask)) {\n        this.masked.updateOptions({\n          mask: mask\n        });\n        return;\n      }\n\n      var masked = (0, _factory.default)({\n        mask: mask\n      });\n      masked.unmaskedValue = this.masked.unmaskedValue;\n      this.masked = masked;\n    }\n    /** Raw value */\n\n  }, {\n    key: \"maskEquals\",\n    value: function maskEquals(mask) {\n      var _this$masked;\n\n      return mask == null || ((_this$masked = this.masked) === null || _this$masked === void 0 ? void 0 : _this$masked.maskEquals(mask));\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    },\n    set: function set(str) {\n      if (this.value === str) return;\n      this.masked.value = str;\n      this.updateControl();\n      this.alignCursor();\n    }\n    /** Unmasked value */\n\n  }, {\n    key: \"unmaskedValue\",\n    get: function get() {\n      return this._unmaskedValue;\n    },\n    set: function set(str) {\n      if (this.unmaskedValue === str) return;\n      this.masked.unmaskedValue = str;\n      this.updateControl();\n      this.alignCursor();\n    }\n    /** Typed unmasked value */\n\n  }, {\n    key: \"typedValue\",\n    get: function get() {\n      return this.masked.typedValue;\n    },\n    set: function set(val) {\n      if (this.masked.typedValueEquals(val)) return;\n      this.masked.typedValue = val;\n      this.updateControl();\n      this.alignCursor();\n    }\n    /**\n      Starts listening to element events\n      @protected\n    */\n\n  }, {\n    key: \"_bindEvents\",\n    value: function _bindEvents() {\n      this.el.bindEvents({\n        selectionChange: this._saveSelection,\n        input: this._onInput,\n        drop: this._onDrop,\n        click: this._onClick,\n        focus: this._onFocus,\n        commit: this._onChange\n      });\n    }\n    /**\n      Stops listening to element events\n      @protected\n     */\n\n  }, {\n    key: \"_unbindEvents\",\n    value: function _unbindEvents() {\n      if (this.el) this.el.unbindEvents();\n    }\n    /**\n      Fires custom event\n      @protected\n     */\n\n  }, {\n    key: \"_fireEvent\",\n    value: function _fireEvent(ev) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      var listeners = this._listeners[ev];\n      if (!listeners) return;\n      listeners.forEach(function (l) {\n        return l.apply(void 0, args);\n      });\n    }\n    /**\n      Current selection start\n      @readonly\n    */\n\n  }, {\n    key: \"selectionStart\",\n    get: function get() {\n      return this._cursorChanging ? this._changingCursorPos : this.el.selectionStart;\n    }\n    /** Current cursor position */\n\n  }, {\n    key: \"cursorPos\",\n    get: function get() {\n      return this._cursorChanging ? this._changingCursorPos : this.el.selectionEnd;\n    },\n    set: function set(pos) {\n      if (!this.el || !this.el.isActive) return;\n      this.el.select(pos, pos);\n\n      this._saveSelection();\n    }\n    /**\n      Stores current selection\n      @protected\n    */\n\n  }, {\n    key: \"_saveSelection\",\n    value: function\n    /* ev */\n    _saveSelection() {\n      if (this.value !== this.el.value) {\n        console.warn('Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.'); // eslint-disable-line no-console\n      }\n\n      this._selection = {\n        start: this.selectionStart,\n        end: this.cursorPos\n      };\n    }\n    /** Syncronizes model value from view */\n\n  }, {\n    key: \"updateValue\",\n    value: function updateValue() {\n      this.masked.value = this.el.value;\n      this._value = this.masked.value;\n    }\n    /** Syncronizes view from model value, fires change events */\n\n  }, {\n    key: \"updateControl\",\n    value: function updateControl() {\n      var newUnmaskedValue = this.masked.unmaskedValue;\n      var newValue = this.masked.value;\n      var isChanged = this.unmaskedValue !== newUnmaskedValue || this.value !== newValue;\n      this._unmaskedValue = newUnmaskedValue;\n      this._value = newValue;\n      if (this.el.value !== newValue) this.el.value = newValue;\n      if (isChanged) this._fireChangeEvents();\n    }\n    /** Updates options with deep equal check, recreates @{link Masked} model if mask type changes */\n\n  }, {\n    key: \"updateOptions\",\n    value: function updateOptions(opts) {\n      var mask = opts.mask,\n          restOpts = (0, _rollupPluginBabelHelpers67bba7fb.b)(opts, _excluded);\n      var updateMask = !this.maskEquals(mask);\n      var updateOpts = !(0, _utils.objectIncludes)(this.masked, restOpts);\n      if (updateMask) this.mask = mask;\n      if (updateOpts) this.masked.updateOptions(restOpts);\n      if (updateMask || updateOpts) this.updateControl();\n    }\n    /** Updates cursor */\n\n  }, {\n    key: \"updateCursor\",\n    value: function updateCursor(cursorPos) {\n      if (cursorPos == null) return;\n      this.cursorPos = cursorPos; // also queue change cursor for mobile browsers\n\n      this._delayUpdateCursor(cursorPos);\n    }\n    /**\n      Delays cursor update to support mobile browsers\n      @private\n    */\n\n  }, {\n    key: \"_delayUpdateCursor\",\n    value: function _delayUpdateCursor(cursorPos) {\n      var _this = this;\n\n      this._abortUpdateCursor();\n\n      this._changingCursorPos = cursorPos;\n      this._cursorChanging = setTimeout(function () {\n        if (!_this.el) return; // if was destroyed\n\n        _this.cursorPos = _this._changingCursorPos;\n\n        _this._abortUpdateCursor();\n      }, 10);\n    }\n    /**\n      Fires custom events\n      @protected\n    */\n\n  }, {\n    key: \"_fireChangeEvents\",\n    value: function _fireChangeEvents() {\n      this._fireEvent('accept', this._inputEvent);\n\n      if (this.masked.isComplete) this._fireEvent('complete', this._inputEvent);\n    }\n    /**\n      Aborts delayed cursor update\n      @private\n    */\n\n  }, {\n    key: \"_abortUpdateCursor\",\n    value: function _abortUpdateCursor() {\n      if (this._cursorChanging) {\n        clearTimeout(this._cursorChanging);\n        delete this._cursorChanging;\n      }\n    }\n    /** Aligns cursor to nearest available position */\n\n  }, {\n    key: \"alignCursor\",\n    value: function alignCursor() {\n      this.cursorPos = this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos, _utils.DIRECTION.LEFT));\n    }\n    /** Aligns cursor only if selection is empty */\n\n  }, {\n    key: \"alignCursorFriendly\",\n    value: function alignCursorFriendly() {\n      if (this.selectionStart !== this.cursorPos) return; // skip if range is selected\n\n      this.alignCursor();\n    }\n    /** Adds listener on custom event */\n\n  }, {\n    key: \"on\",\n    value: function on(ev, handler) {\n      if (!this._listeners[ev]) this._listeners[ev] = [];\n\n      this._listeners[ev].push(handler);\n\n      return this;\n    }\n    /** Removes custom event listener */\n\n  }, {\n    key: \"off\",\n    value: function off(ev, handler) {\n      if (!this._listeners[ev]) return this;\n\n      if (!handler) {\n        delete this._listeners[ev];\n        return this;\n      }\n\n      var hIndex = this._listeners[ev].indexOf(handler);\n\n      if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\n      return this;\n    }\n    /** Handles view input event */\n\n  }, {\n    key: \"_onInput\",\n    value: function _onInput(e) {\n      this._inputEvent = e;\n\n      this._abortUpdateCursor(); // fix strange IE behavior\n\n\n      if (!this._selection) return this.updateValue();\n      var details = new _actionDetails.default( // new state\n      this.el.value, this.cursorPos, // old state\n      this.value, this._selection);\n      var oldRawValue = this.masked.rawInputValue;\n      var offset = this.masked.splice(details.startChangePos, details.removed.length, details.inserted, details.removeDirection, {\n        input: true,\n        raw: true\n      }).offset; // force align in remove direction only if no input chars were removed\n      // otherwise we still need to align with NONE (to get out from fixed symbols for instance)\n\n      var removeDirection = oldRawValue === this.masked.rawInputValue ? details.removeDirection : _utils.DIRECTION.NONE;\n      var cursorPos = this.masked.nearestInputPos(details.startChangePos + offset, removeDirection);\n      if (removeDirection !== _utils.DIRECTION.NONE) cursorPos = this.masked.nearestInputPos(cursorPos, _utils.DIRECTION.NONE);\n      this.updateControl();\n      this.updateCursor(cursorPos);\n      delete this._inputEvent;\n    }\n    /** Handles view change event and commits model value */\n\n  }, {\n    key: \"_onChange\",\n    value: function _onChange() {\n      if (this.value !== this.el.value) {\n        this.updateValue();\n      }\n\n      this.masked.doCommit();\n      this.updateControl();\n\n      this._saveSelection();\n    }\n    /** Handles view drop event, prevents by default */\n\n  }, {\n    key: \"_onDrop\",\n    value: function _onDrop(ev) {\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n    /** Restore last selection on focus */\n\n  }, {\n    key: \"_onFocus\",\n    value: function _onFocus(ev) {\n      this.alignCursorFriendly();\n    }\n    /** Restore last selection on focus */\n\n  }, {\n    key: \"_onClick\",\n    value: function _onClick(ev) {\n      this.alignCursorFriendly();\n    }\n    /** Unbind view events and removes element reference */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._unbindEvents(); // $FlowFixMe why not do so?\n\n\n      this._listeners.length = 0; // $FlowFixMe\n\n      delete this.el;\n    }\n  }]);\n  return InputMask;\n}();\n\nexports.default = InputMask;\n_holder.default.InputMask = InputMask;"},"sourceMaps":null,"error":null,"hash":"c36907a51c83eecfcee48dbf143b615b","cacheData":{"env":{}}}