{"id":"NYPs","dependencies":[{"name":"C:\\projects\\stud-test\\package.json","includedInParent":true,"mtime":1672313724264},{"name":"C:\\projects\\stud-test\\node_modules\\lodash-es\\package.json","includedInParent":true,"mtime":1666601424776},{"name":"./_Stack.js","loc":{"line":1,"column":18,"index":18},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_baseClone.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_Stack.js"},{"name":"./_arrayEach.js","loc":{"line":2,"column":22,"index":55},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_baseClone.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_arrayEach.js"},{"name":"./_assignValue.js","loc":{"line":3,"column":24,"index":98},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_baseClone.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_assignValue.js"},{"name":"./_baseAssign.js","loc":{"line":4,"column":23,"index":142},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_baseClone.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_baseAssign.js"},{"name":"./_baseAssignIn.js","loc":{"line":5,"column":25,"index":187},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_baseClone.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_baseAssignIn.js"},{"name":"./_cloneBuffer.js","loc":{"line":6,"column":24,"index":233},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_baseClone.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_cloneBuffer.js"},{"name":"./_copyArray.js","loc":{"line":7,"column":22,"index":276},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_baseClone.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_copyArray.js"},{"name":"./_copySymbols.js","loc":{"line":8,"column":24,"index":319},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_baseClone.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_copySymbols.js"},{"name":"./_copySymbolsIn.js","loc":{"line":9,"column":26,"index":366},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_baseClone.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_copySymbolsIn.js"},{"name":"./_getAllKeys.js","loc":{"line":10,"column":23,"index":412},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_baseClone.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_getAllKeys.js"},{"name":"./_getAllKeysIn.js","loc":{"line":11,"column":25,"index":457},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_baseClone.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_getAllKeysIn.js"},{"name":"./_getTag.js","loc":{"line":12,"column":19,"index":498},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_baseClone.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_getTag.js"},{"name":"./_initCloneArray.js","loc":{"line":13,"column":27,"index":541},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_baseClone.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_initCloneArray.js"},{"name":"./_initCloneByTag.js","loc":{"line":14,"column":27,"index":592},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_baseClone.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_initCloneByTag.js"},{"name":"./_initCloneObject.js","loc":{"line":15,"column":28,"index":644},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_baseClone.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_initCloneObject.js"},{"name":"./isArray.js","loc":{"line":16,"column":20,"index":689},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_baseClone.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\isArray.js"},{"name":"./isBuffer.js","loc":{"line":17,"column":21,"index":726},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_baseClone.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\isBuffer.js"},{"name":"./isMap.js","loc":{"line":18,"column":18,"index":761},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_baseClone.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\isMap.js"},{"name":"./isObject.js","loc":{"line":19,"column":21,"index":796},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_baseClone.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\isObject.js"},{"name":"./isSet.js","loc":{"line":20,"column":18,"index":831},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_baseClone.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\isSet.js"},{"name":"./keys.js","loc":{"line":21,"column":17,"index":862},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_baseClone.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\keys.js"},{"name":"./keysIn.js","loc":{"line":22,"column":19,"index":894},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_baseClone.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\keysIn.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _Stack = _interopRequireDefault(require(\"./_Stack.js\"));\n\nvar _arrayEach = _interopRequireDefault(require(\"./_arrayEach.js\"));\n\nvar _assignValue = _interopRequireDefault(require(\"./_assignValue.js\"));\n\nvar _baseAssign = _interopRequireDefault(require(\"./_baseAssign.js\"));\n\nvar _baseAssignIn = _interopRequireDefault(require(\"./_baseAssignIn.js\"));\n\nvar _cloneBuffer = _interopRequireDefault(require(\"./_cloneBuffer.js\"));\n\nvar _copyArray = _interopRequireDefault(require(\"./_copyArray.js\"));\n\nvar _copySymbols = _interopRequireDefault(require(\"./_copySymbols.js\"));\n\nvar _copySymbolsIn = _interopRequireDefault(require(\"./_copySymbolsIn.js\"));\n\nvar _getAllKeys = _interopRequireDefault(require(\"./_getAllKeys.js\"));\n\nvar _getAllKeysIn = _interopRequireDefault(require(\"./_getAllKeysIn.js\"));\n\nvar _getTag = _interopRequireDefault(require(\"./_getTag.js\"));\n\nvar _initCloneArray = _interopRequireDefault(require(\"./_initCloneArray.js\"));\n\nvar _initCloneByTag = _interopRequireDefault(require(\"./_initCloneByTag.js\"));\n\nvar _initCloneObject = _interopRequireDefault(require(\"./_initCloneObject.js\"));\n\nvar _isArray = _interopRequireDefault(require(\"./isArray.js\"));\n\nvar _isBuffer = _interopRequireDefault(require(\"./isBuffer.js\"));\n\nvar _isMap = _interopRequireDefault(require(\"./isMap.js\"));\n\nvar _isObject = _interopRequireDefault(require(\"./isObject.js\"));\n\nvar _isSet = _interopRequireDefault(require(\"./isSet.js\"));\n\nvar _keys = _interopRequireDefault(require(\"./keys.js\"));\n\nvar _keysIn = _interopRequireDefault(require(\"./keysIn.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values supported by `_.clone`. */\n\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\n\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n\n  if (result !== undefined) {\n    return result;\n  }\n\n  if (!(0, _isObject.default)(value)) {\n    return value;\n  }\n\n  var isArr = (0, _isArray.default)(value);\n\n  if (isArr) {\n    result = (0, _initCloneArray.default)(value);\n\n    if (!isDeep) {\n      return (0, _copyArray.default)(value, result);\n    }\n  } else {\n    var tag = (0, _getTag.default)(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if ((0, _isBuffer.default)(value)) {\n      return (0, _cloneBuffer.default)(value, isDeep);\n    }\n\n    if (tag == objectTag || tag == argsTag || isFunc && !object) {\n      result = isFlat || isFunc ? {} : (0, _initCloneObject.default)(value);\n\n      if (!isDeep) {\n        return isFlat ? (0, _copySymbolsIn.default)(value, (0, _baseAssignIn.default)(result, value)) : (0, _copySymbols.default)(value, (0, _baseAssign.default)(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n\n      result = (0, _initCloneByTag.default)(value, tag, isDeep);\n    }\n  } // Check for circular references and return its corresponding clone.\n\n\n  stack || (stack = new _Stack.default());\n  var stacked = stack.get(value);\n\n  if (stacked) {\n    return stacked;\n  }\n\n  stack.set(value, result);\n\n  if ((0, _isSet.default)(value)) {\n    value.forEach(function (subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if ((0, _isMap.default)(value)) {\n    value.forEach(function (subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull ? isFlat ? _getAllKeysIn.default : _getAllKeys.default : isFlat ? _keysIn.default : _keys.default;\n  var props = isArr ? undefined : keysFunc(value);\n  (0, _arrayEach.default)(props || value, function (subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    } // Recursively populate clone (susceptible to call stack limits).\n\n\n    (0, _assignValue.default)(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nvar _default = baseClone;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"596131a6b0ff8701234399c773d4312b","cacheData":{"env":{}}}