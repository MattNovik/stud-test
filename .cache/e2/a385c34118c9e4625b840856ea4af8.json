{"id":"kigP","dependencies":[{"name":"C:\\projects\\stud-test\\package.json","includedInParent":true,"mtime":1672148335290},{"name":"C:\\projects\\stud-test\\node_modules\\lodash-es\\package.json","includedInParent":true,"mtime":1666601424776},{"name":"./_getMapData.js","loc":{"line":1,"column":23,"index":23},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_mapCacheDelete.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_getMapData.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _getMapData = _interopRequireDefault(require(\"./_getMapData.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = (0, _getMapData.default)(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nvar _default = mapCacheDelete;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"f155a6c7ef7c7ca332af129285d2b86e","cacheData":{"env":{}}}