{"id":"bgO7","dependencies":[{"name":"C:\\projects\\stud-test\\package.json","includedInParent":true,"mtime":1672148335290},{"name":"C:\\projects\\stud-test\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1666601426036},{"name":"./_baseGetTag","loc":{"line":1,"column":25,"index":25},"parent":"C:\\projects\\stud-test\\node_modules\\lodash\\isSymbol.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash\\_baseGetTag.js"},{"name":"./isObjectLike","loc":{"line":2,"column":27,"index":70},"parent":"C:\\projects\\stud-test\\node_modules\\lodash\\isSymbol.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash\\isObjectLike.js"}],"generated":{"js":"var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n"},"sourceMaps":null,"error":null,"hash":"483e3e90fe74a11bcc6dc7dc658c1aa1","cacheData":{"env":{}}}