{"id":"fwYF","dependencies":[{"name":"C:\\projects\\stud-test\\package.json","includedInParent":true,"mtime":1672313724264},{"name":"C:\\projects\\stud-test\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1666601426036},{"name":"./_ListCache","loc":{"line":1,"column":24,"index":24},"parent":"C:\\projects\\stud-test\\node_modules\\lodash\\_stackSet.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash\\_ListCache.js"},{"name":"./_Map","loc":{"line":2,"column":18,"index":59},"parent":"C:\\projects\\stud-test\\node_modules\\lodash\\_stackSet.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash\\_Map.js"},{"name":"./_MapCache","loc":{"line":3,"column":23,"index":93},"parent":"C:\\projects\\stud-test\\node_modules\\lodash\\_stackSet.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash\\_MapCache.js"}],"generated":{"js":"var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n"},"sourceMaps":null,"error":null,"hash":"adac7c15adbb34154aecd626b6142645","cacheData":{"env":{}}}