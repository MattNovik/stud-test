{"id":"O4yZ","dependencies":[{"name":"C:\\projects\\stud-test\\package.json","includedInParent":true,"mtime":1672148335290},{"name":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\FormControlUnstyled\\package.json","includedInParent":true,"mtime":1666601424712},{"name":"@babel/runtime/helpers/esm/extends","loc":{"line":1,"column":21,"index":21},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\FormControlUnstyled\\FormControlUnstyled.js","resolved":"C:\\projects\\stud-test\\node_modules\\@babel\\runtime\\helpers\\esm\\extends.js"},{"name":"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose","loc":{"line":2,"column":42,"index":101},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\FormControlUnstyled\\FormControlUnstyled.js","resolved":"C:\\projects\\stud-test\\node_modules\\@babel\\runtime\\helpers\\esm\\objectWithoutPropertiesLoose.js"},{"name":"react","loc":{"line":4,"column":23,"index":331},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\FormControlUnstyled\\FormControlUnstyled.js","resolved":"C:\\projects\\stud-test\\node_modules\\react\\index.js"},{"name":"prop-types","loc":{"line":5,"column":22,"index":362},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\FormControlUnstyled\\FormControlUnstyled.js","resolved":"C:\\projects\\stud-test\\node_modules\\prop-types\\index.js"},{"name":"@mui/utils","loc":{"line":6,"column":56,"index":432},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\FormControlUnstyled\\FormControlUnstyled.js","resolved":"C:\\projects\\stud-test\\node_modules\\@mui\\utils\\esm\\index.js"},{"name":"./FormControlUnstyledContext","loc":{"line":7,"column":39,"index":485},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\FormControlUnstyled\\FormControlUnstyled.js","resolved":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\FormControlUnstyled\\FormControlUnstyledContext.js"},{"name":"./formControlUnstyledClasses","loc":{"line":8,"column":51,"index":568},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\FormControlUnstyled\\FormControlUnstyled.js","resolved":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\FormControlUnstyled\\formControlUnstyledClasses.js"},{"name":"../utils","loc":{"line":9,"column":29,"index":629},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\FormControlUnstyled\\FormControlUnstyled.js","resolved":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\utils\\index.js"},{"name":"../composeClasses","loc":{"line":10,"column":27,"index":668},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\FormControlUnstyled\\FormControlUnstyled.js","resolved":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\composeClasses\\index.js"},{"name":"react/jsx-runtime","loc":{"line":11,"column":28,"index":717},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\FormControlUnstyled\\FormControlUnstyled.js","resolved":"C:\\projects\\stud-test\\node_modules\\react\\jsx-runtime.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/esm/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _utils = require(\"@mui/utils\");\n\nvar _FormControlUnstyledContext = _interopRequireDefault(require(\"./FormControlUnstyledContext\"));\n\nvar _formControlUnstyledClasses = require(\"./formControlUnstyledClasses\");\n\nvar _utils2 = require(\"../utils\");\n\nvar _composeClasses = _interopRequireDefault(require(\"../composeClasses\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst _excluded = [\"defaultValue\", \"children\", \"component\", \"components\", \"componentsProps\", \"disabled\", \"error\", \"onChange\", \"required\", \"value\"];\n\nfunction hasValue(value) {\n  return value != null && !(Array.isArray(value) && value.length === 0) && value !== '';\n}\n\nfunction useUtilityClasses(ownerState) {\n  const {\n    disabled,\n    error,\n    filled,\n    focused,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', focused && 'focused', error && 'error', filled && 'filled', required && 'required']\n  };\n  return (0, _composeClasses.default)(slots, _formControlUnstyledClasses.getFormControlUnstyledUtilityClass, {});\n}\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n * *   FormLabel\n * *   FormHelperText\n * *   Input\n * *   InputLabel\n *\n * You can find one composition example below and more going to [the demos](https://mui.com/material-ui/react-text-field/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️ Only one `Input` can be used within a FormControl because it create visual inconsistencies.\n * For instance, only one input can be focused at the same time, the state shouldn't be shared.\n *\n * Demos:\n *\n * - [Unstyled form control](https://mui.com/base/react-form-control/)\n *\n * API:\n *\n * - [FormControlUnstyled API](https://mui.com/base/api/form-control-unstyled/)\n */\n\n\nconst FormControlUnstyled = /*#__PURE__*/React.forwardRef(function FormControlUnstyled(props, ref) {\n  var _ref;\n\n  const {\n    defaultValue,\n    children,\n    component,\n    components = {},\n    componentsProps = {},\n    disabled = false,\n    error = false,\n    onChange,\n    required = false,\n    value: incomingValue\n  } = props,\n        other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);\n  const [value, setValue] = (0, _utils.unstable_useControlled)({\n    controlled: incomingValue,\n    default: defaultValue,\n    name: 'FormControl',\n    state: 'value'\n  });\n  const filled = hasValue(value);\n  const [focused, setFocused] = React.useState(false);\n\n  if (disabled && focused) {\n    setFocused(false);\n  }\n\n  const ownerState = (0, _extends2.default)({}, props, {\n    disabled,\n    error,\n    filled,\n    focused,\n    required\n  });\n\n  const handleChange = event => {\n    setValue(event.target.value);\n    onChange == null ? void 0 : onChange(event);\n  };\n\n  const childContext = {\n    disabled,\n    error,\n    filled,\n    focused,\n    onBlur: () => {\n      setFocused(false);\n    },\n    onChange: handleChange,\n    onFocus: () => {\n      setFocused(true);\n    },\n    required,\n    value: value != null ? value : ''\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  const renderChildren = () => {\n    if (typeof children === 'function') {\n      return children(childContext);\n    }\n\n    return children;\n  };\n\n  const Root = (_ref = component != null ? component : components.Root) != null ? _ref : 'div';\n  const rootProps = (0, _utils2.useSlotProps)({\n    elementType: Root,\n    externalSlotProps: componentsProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref,\n      children: renderChildren()\n    },\n    ownerState,\n    className: classes.root\n  });\n  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_FormControlUnstyledContext.default.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(Root, (0, _extends2.default)({}, rootProps))\n  });\n});\n\"production\" !== \"production\" ? FormControlUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: _propTypes.default\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([_propTypes.default.node, _propTypes.default.func]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: _propTypes.default.elementType,\n\n  /**\n   * The components used for each slot inside the FormControl.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: _propTypes.default.shape({\n    Root: _propTypes.default.elementType\n  }),\n\n  /**\n   * @ignore\n   */\n  componentsProps: _propTypes.default.shape({\n    root: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object])\n  }),\n\n  /**\n   * @ignore\n   */\n  defaultValue: _propTypes.default.any,\n\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   * @default false\n   */\n  disabled: _propTypes.default.bool,\n\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: _propTypes.default.bool,\n\n  /**\n   * @ignore\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   * @default false\n   */\n  required: _propTypes.default.bool,\n\n  /**\n   * @ignore\n   */\n  value: _propTypes.default.any\n} : void 0;\nvar _default = FormControlUnstyled;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"b04f636584fe9f3f6363802ba1f09f04","cacheData":{"env":{"NODE_ENV":"production"}}}