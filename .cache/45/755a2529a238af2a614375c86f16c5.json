{"id":"ya15","dependencies":[{"name":"C:\\projects\\stud-test\\package.json","includedInParent":true,"mtime":1672313724264},{"name":"C:\\projects\\stud-test\\node_modules\\nanoid\\package.json","includedInParent":true,"mtime":1666601412940},{"name":"./url-alphabet/index.js","loc":{"line":1,"column":28,"index":28},"parent":"C:\\projects\\stud-test\\node_modules\\nanoid\\index.browser.js","resolved":"C:\\projects\\stud-test\\node_modules\\nanoid\\url-alphabet\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.random = exports.nanoid = exports.customRandom = exports.customAlphabet = void 0;\nObject.defineProperty(exports, \"urlAlphabet\", {\n  enumerable: true,\n  get: function () {\n    return _index.urlAlphabet;\n  }\n});\n\nvar _index = require(\"./url-alphabet/index.js\");\n\nvar random = function random(bytes) {\n  return crypto.getRandomValues(new Uint8Array(bytes));\n};\n\nexports.random = random;\n\nvar customRandom = function customRandom(alphabet, defaultSize, getRandom) {\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1;\n  var step = -~(1.6 * mask * defaultSize / alphabet.length);\n  return function () {\n    var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultSize;\n    var id = '';\n\n    while (true) {\n      var bytes = getRandom(step);\n      var j = step;\n\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || '';\n        if (id.length === size) return id;\n      }\n    }\n  };\n};\n\nexports.customRandom = customRandom;\n\nvar customAlphabet = function customAlphabet(alphabet) {\n  var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 21;\n  return customRandom(alphabet, size, random);\n};\n\nexports.customAlphabet = customAlphabet;\n\nvar nanoid = function nanoid() {\n  var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 21;\n  return crypto.getRandomValues(new Uint8Array(size)).reduce(function (id, byte) {\n    byte &= 63;\n\n    if (byte < 36) {\n      id += byte.toString(36);\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase();\n    } else if (byte > 62) {\n      id += '-';\n    } else {\n      id += '_';\n    }\n\n    return id;\n  }, '');\n};\n\nexports.nanoid = nanoid;"},"sourceMaps":null,"error":null,"hash":"000c3e3f1c33ae35a8ce921882e98b19","cacheData":{"env":{}}}