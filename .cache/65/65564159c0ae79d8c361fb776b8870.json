{"id":"IkXr","dependencies":[{"name":"C:\\projects\\stud-test\\package.json","includedInParent":true,"mtime":1672148335290},{"name":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\MenuItemUnstyled\\package.json","includedInParent":true,"mtime":1666601424733},{"name":"@babel/runtime/helpers/esm/extends","loc":{"line":1,"column":21,"index":21},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\MenuItemUnstyled\\useMenuItem.js","resolved":"C:\\projects\\stud-test\\node_modules\\@babel\\runtime\\helpers\\esm\\extends.js"},{"name":"react","loc":{"line":2,"column":23,"index":82},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\MenuItemUnstyled\\useMenuItem.js","resolved":"C:\\projects\\stud-test\\node_modules\\react\\index.js"},{"name":"@mui/utils","loc":{"line":3,"column":75,"index":166},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\MenuItemUnstyled\\useMenuItem.js","resolved":"C:\\projects\\stud-test\\node_modules\\@mui\\utils\\esm\\index.js"},{"name":"../MenuUnstyled","loc":{"line":4,"column":36,"index":216},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\MenuItemUnstyled\\useMenuItem.js","resolved":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\MenuUnstyled\\index.js"},{"name":"../ButtonUnstyled","loc":{"line":5,"column":26,"index":261},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\MenuItemUnstyled\\useMenuItem.js","resolved":"C:\\projects\\stud-test\\node_modules\\@mui\\base\\ButtonUnstyled\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useMenuItem;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/esm/extends\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _utils = require(\"@mui/utils\");\n\nvar _MenuUnstyled = require(\"../MenuUnstyled\");\n\nvar _ButtonUnstyled = require(\"../ButtonUnstyled\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction useMenuItem(props) {\n  var _itemState$disabled;\n\n  const {\n    disabled = false,\n    ref,\n    label\n  } = props;\n  const id = (0, _utils.unstable_useId)();\n  const menuContext = React.useContext(_MenuUnstyled.MenuUnstyledContext);\n  const itemRef = React.useRef(null);\n  const handleRef = (0, _utils.unstable_useForkRef)(itemRef, ref);\n\n  if (menuContext === null) {\n    throw new Error('MenuItemUnstyled must be used within a MenuUnstyled');\n  }\n\n  const {\n    registerItem,\n    unregisterItem,\n    open\n  } = menuContext;\n  React.useEffect(() => {\n    if (id === undefined) {\n      return undefined;\n    }\n\n    registerItem(id, {\n      disabled,\n      id,\n      ref: itemRef,\n      label\n    });\n    return () => unregisterItem(id);\n  }, [id, registerItem, unregisterItem, disabled, ref, label]);\n  const {\n    getRootProps: getButtonProps,\n    focusVisible\n  } = (0, _ButtonUnstyled.useButton)({\n    disabled,\n    focusableWhenDisabled: true,\n    ref: handleRef\n  }); // Ensure the menu item is focused when highlighted\n\n  const [focusRequested, requestFocus] = React.useState(false);\n  const focusIfRequested = React.useCallback(() => {\n    if (focusRequested && itemRef.current != null) {\n      itemRef.current.focus();\n      requestFocus(false);\n    }\n  }, [focusRequested]);\n  React.useEffect(() => {\n    focusIfRequested();\n  });\n  React.useDebugValue({\n    id,\n    disabled,\n    label\n  });\n  const itemState = menuContext.getItemState(id != null ? id : '');\n  const {\n    highlighted\n  } = itemState != null ? itemState : {\n    highlighted: false\n  };\n  React.useEffect(() => {\n    requestFocus(highlighted && open);\n  }, [highlighted, open]);\n\n  if (id === undefined) {\n    return {\n      getRootProps: other => (0, _extends2.default)({}, other, getButtonProps(other), {\n        role: 'menuitem'\n      }),\n      disabled: false,\n      focusVisible\n    };\n  }\n\n  return {\n    getRootProps: other => {\n      const optionProps = menuContext.getItemProps(id, other);\n      return (0, _extends2.default)({}, other, getButtonProps(other), {\n        tabIndex: optionProps.tabIndex,\n        id: optionProps.id,\n        role: 'menuitem'\n      });\n    },\n    disabled: (_itemState$disabled = itemState == null ? void 0 : itemState.disabled) != null ? _itemState$disabled : false,\n    focusVisible\n  };\n}"},"sourceMaps":null,"error":null,"hash":"e7542e98fca45a964df7b24f9a0e5678","cacheData":{"env":{}}}