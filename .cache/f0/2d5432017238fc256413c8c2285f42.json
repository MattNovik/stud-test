{"id":"Zn9S","dependencies":[{"name":"C:\\projects\\stud-test\\package.json","includedInParent":true,"mtime":1672148335290},{"name":"C:\\projects\\stud-test\\node_modules\\lodash-es\\package.json","includedInParent":true,"mtime":1666601424776},{"name":"./_memoizeCapped.js","loc":{"line":1,"column":26,"index":26},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_stringToPath.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_memoizeCapped.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _memoizeCapped = _interopRequireDefault(require(\"./_memoizeCapped.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = (0, _memoizeCapped.default)(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n    result.push('');\n  }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nvar _default = stringToPath;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"1f0af41daa328fe0b529ce823835ac25","cacheData":{"env":{}}}