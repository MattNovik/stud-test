{"id":"RSkD","dependencies":[{"name":"C:\\projects\\stud-test\\package.json","includedInParent":true,"mtime":1672313724264},{"name":"C:\\projects\\stud-test\\node_modules\\lodash-es\\package.json","includedInParent":true,"mtime":1666601424776},{"name":"./isSymbol.js","loc":{"line":1,"column":21,"index":21},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_toKey.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\isSymbol.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _isSymbol = _interopRequireDefault(require(\"./isSymbol.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || (0, _isSymbol.default)(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nvar _default = toKey;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"8791ea6accc17540d447ba74146abb63","cacheData":{"env":{}}}