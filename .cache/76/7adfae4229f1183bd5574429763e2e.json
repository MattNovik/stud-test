{"id":"WtWm","dependencies":[{"name":"C:\\projects\\stud-test\\package.json","includedInParent":true,"mtime":1672313724264},{"name":"C:\\projects\\stud-test\\node_modules\\imask\\package.json","includedInParent":true,"mtime":1666601416569},{"name":"../_rollupPluginBabelHelpers-67bba7fb.js","loc":{"line":1,"column":91,"index":91},"parent":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\controls\\html-contenteditable-mask-element.js","resolved":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\_rollupPluginBabelHelpers-67bba7fb.js"},{"name":"./html-mask-element.js","loc":{"line":2,"column":28,"index":163},"parent":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\controls\\html-contenteditable-mask-element.js","resolved":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\controls\\html-mask-element.js"},{"name":"../core/holder.js","loc":{"line":3,"column":18,"index":207},"parent":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\controls\\html-contenteditable-mask-element.js","resolved":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\core\\holder.js"},{"name":"./mask-element.js","loc":{"line":4,"column":7,"index":235},"parent":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\controls\\html-contenteditable-mask-element.js","resolved":"C:\\projects\\stud-test\\node_modules\\imask\\esm\\controls\\mask-element.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rollupPluginBabelHelpers67bba7fb = require(\"../_rollupPluginBabelHelpers-67bba7fb.js\");\n\nvar _htmlMaskElement = _interopRequireDefault(require(\"./html-mask-element.js\"));\n\nvar _holder = _interopRequireDefault(require(\"../core/holder.js\"));\n\nrequire(\"./mask-element.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar HTMLContenteditableMaskElement = /*#__PURE__*/function (_HTMLMaskElement) {\n  (0, _rollupPluginBabelHelpers67bba7fb.d)(HTMLContenteditableMaskElement, _HTMLMaskElement);\n\n  var _super = (0, _rollupPluginBabelHelpers67bba7fb.e)(HTMLContenteditableMaskElement);\n\n  function HTMLContenteditableMaskElement() {\n    (0, _rollupPluginBabelHelpers67bba7fb.a)(this, HTMLContenteditableMaskElement);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _rollupPluginBabelHelpers67bba7fb._)(HTMLContenteditableMaskElement, [{\n    key: \"_unsafeSelectionStart\",\n    get:\n    /**\n      Returns HTMLElement selection start\n      @override\n    */\n    function get() {\n      var root = this.rootElement;\n      var selection = root.getSelection && root.getSelection();\n      var anchorOffset = selection && selection.anchorOffset;\n      var focusOffset = selection && selection.focusOffset;\n\n      if (focusOffset == null || anchorOffset == null || anchorOffset < focusOffset) {\n        return anchorOffset;\n      }\n\n      return focusOffset;\n    }\n    /**\n      Returns HTMLElement selection end\n      @override\n    */\n\n  }, {\n    key: \"_unsafeSelectionEnd\",\n    get: function get() {\n      var root = this.rootElement;\n      var selection = root.getSelection && root.getSelection();\n      var anchorOffset = selection && selection.anchorOffset;\n      var focusOffset = selection && selection.focusOffset;\n\n      if (focusOffset == null || anchorOffset == null || anchorOffset > focusOffset) {\n        return anchorOffset;\n      }\n\n      return focusOffset;\n    }\n    /**\n      Sets HTMLElement selection\n      @override\n    */\n\n  }, {\n    key: \"_unsafeSelect\",\n    value: function _unsafeSelect(start, end) {\n      if (!this.rootElement.createRange) return;\n      var range = this.rootElement.createRange();\n      range.setStart(this.input.firstChild || this.input, start);\n      range.setEnd(this.input.lastChild || this.input, end);\n      var root = this.rootElement;\n      var selection = root.getSelection && root.getSelection();\n\n      if (selection) {\n        selection.removeAllRanges();\n        selection.addRange(range);\n      }\n    }\n    /**\n      HTMLElement value\n      @override\n    */\n\n  }, {\n    key: \"value\",\n    get: function get() {\n      // $FlowFixMe\n      return this.input.textContent;\n    },\n    set: function set(value) {\n      this.input.textContent = value;\n    }\n  }]);\n  return HTMLContenteditableMaskElement;\n}(_htmlMaskElement.default);\n\nexports.default = HTMLContenteditableMaskElement;\n_holder.default.HTMLContenteditableMaskElement = HTMLContenteditableMaskElement;"},"sourceMaps":null,"error":null,"hash":"b0fe8ae2ed977673cb4c8e0607c03a0c","cacheData":{"env":{}}}