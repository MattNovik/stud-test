{"id":"y4UJ","dependencies":[{"name":"C:\\projects\\stud-test\\package.json","includedInParent":true,"mtime":1672313724264},{"name":"C:\\projects\\stud-test\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1666601426036},{"name":"./_asciiWords","loc":{"line":1,"column":25,"index":25},"parent":"C:\\projects\\stud-test\\node_modules\\lodash\\words.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash\\_asciiWords.js"},{"name":"./_hasUnicodeWord","loc":{"line":2,"column":29,"index":72},"parent":"C:\\projects\\stud-test\\node_modules\\lodash\\words.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash\\_hasUnicodeWord.js"},{"name":"./toString","loc":{"line":3,"column":23,"index":117},"parent":"C:\\projects\\stud-test\\node_modules\\lodash\\words.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash\\toString.js"},{"name":"./_unicodeWords","loc":{"line":4,"column":27,"index":159},"parent":"C:\\projects\\stud-test\\node_modules\\lodash\\words.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash\\_unicodeWords.js"}],"generated":{"js":"var asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;\n"},"sourceMaps":null,"error":null,"hash":"b11e4a73284460a794b0ee881f7f9c28","cacheData":{"env":{}}}