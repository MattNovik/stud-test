{"id":"x3Ja","dependencies":[{"name":"C:\\projects\\stud-test\\package.json","includedInParent":true,"mtime":1672313724264},{"name":"C:\\projects\\stud-test\\node_modules\\@popperjs\\core\\package.json","includedInParent":true,"mtime":1666601409403},{"name":"./instanceOf.js","loc":{"line":1,"column":29,"index":29},"parent":"C:\\projects\\stud-test\\node_modules\\@popperjs\\core\\lib\\dom-utils\\contains.js","resolved":"C:\\projects\\stud-test\\node_modules\\@popperjs\\core\\lib\\dom-utils\\instanceOf.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = contains;\n\nvar _instanceOf = require(\"./instanceOf.js\");\n\nfunction contains(parent, child) {\n  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method\n\n  if (parent.contains(child)) {\n    return true;\n  } // then fallback to custom implementation with Shadow DOM support\n  else if (rootNode && (0, _instanceOf.isShadowRoot)(rootNode)) {\n    var next = child;\n\n    do {\n      if (next && parent.isSameNode(next)) {\n        return true;\n      } // $FlowFixMe[prop-missing]: need a better way to handle this...\n\n\n      next = next.parentNode || next.host;\n    } while (next);\n  } // Give up, the result is false\n\n\n  return false;\n}"},"sourceMaps":null,"error":null,"hash":"98142d14b786cef373e2e2593586999a","cacheData":{"env":{}}}