{"id":"jKvR","dependencies":[{"name":"C:\\projects\\stud-test\\package.json","includedInParent":true,"mtime":1672313724264},{"name":"C:\\projects\\stud-test\\node_modules\\@mui\\material\\package.json","includedInParent":true,"mtime":1666601429550},{"name":"@babel/runtime/helpers/esm/extends","loc":{"line":1,"column":21,"index":21},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\material\\esm\\ButtonBase\\TouchRipple.js","resolved":"C:\\projects\\stud-test\\node_modules\\@babel\\runtime\\helpers\\esm\\extends.js"},{"name":"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose","loc":{"line":2,"column":42,"index":101},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\material\\esm\\ButtonBase\\TouchRipple.js","resolved":"C:\\projects\\stud-test\\node_modules\\@babel\\runtime\\helpers\\esm\\objectWithoutPropertiesLoose.js"},{"name":"react","loc":{"line":11,"column":23,"index":290},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\material\\esm\\ButtonBase\\TouchRipple.js","resolved":"C:\\projects\\stud-test\\node_modules\\react\\index.js"},{"name":"prop-types","loc":{"line":12,"column":22,"index":321},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\material\\esm\\ButtonBase\\TouchRipple.js","resolved":"C:\\projects\\stud-test\\node_modules\\prop-types\\index.js"},{"name":"react-transition-group","loc":{"line":13,"column":32,"index":367},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\material\\esm\\ButtonBase\\TouchRipple.js","resolved":"C:\\projects\\stud-test\\node_modules\\react-transition-group\\esm\\index.js"},{"name":"clsx","loc":{"line":14,"column":17,"index":410},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\material\\esm\\ButtonBase\\TouchRipple.js","resolved":"C:\\projects\\stud-test\\node_modules\\clsx\\dist\\clsx.m.js"},{"name":"@mui/system","loc":{"line":15,"column":26,"index":444},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\material\\esm\\ButtonBase\\TouchRipple.js","resolved":"C:\\projects\\stud-test\\node_modules\\@mui\\system\\esm\\index.js"},{"name":"../styles/styled","loc":{"line":16,"column":19,"index":478},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\material\\esm\\ButtonBase\\TouchRipple.js","resolved":"C:\\projects\\stud-test\\node_modules\\@mui\\material\\esm\\styles\\styled.js"},{"name":"../styles/useThemeProps","loc":{"line":17,"column":26,"index":524},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\material\\esm\\ButtonBase\\TouchRipple.js","resolved":"C:\\projects\\stud-test\\node_modules\\@mui\\material\\esm\\styles\\useThemeProps.js"},{"name":"./Ripple","loc":{"line":18,"column":19,"index":570},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\material\\esm\\ButtonBase\\TouchRipple.js","resolved":"C:\\projects\\stud-test\\node_modules\\@mui\\material\\esm\\ButtonBase\\Ripple.js"},{"name":"./touchRippleClasses","loc":{"line":19,"column":31,"index":613},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\material\\esm\\ButtonBase\\TouchRipple.js","resolved":"C:\\projects\\stud-test\\node_modules\\@mui\\material\\esm\\ButtonBase\\touchRippleClasses.js"},{"name":"react/jsx-runtime","loc":{"line":20,"column":28,"index":665},"parent":"C:\\projects\\stud-test\\node_modules\\@mui\\material\\esm\\ButtonBase\\TouchRipple.js","resolved":"C:\\projects\\stud-test\\node_modules\\react\\jsx-runtime.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.TouchRippleRoot = exports.TouchRippleRipple = exports.DELAY_RIPPLE = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/esm/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactTransitionGroup = require(\"react-transition-group\");\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _system = require(\"@mui/system\");\n\nvar _styled = _interopRequireDefault(require(\"../styles/styled\"));\n\nvar _useThemeProps = _interopRequireDefault(require(\"../styles/useThemeProps\"));\n\nvar _Ripple = _interopRequireDefault(require(\"./Ripple\"));\n\nvar _touchRippleClasses = _interopRequireDefault(require(\"./touchRippleClasses\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nvar _excluded = [\"center\", \"classes\", \"className\"];\n\nvar _ = function _(t) {\n  return t;\n},\n    _t,\n    _t2,\n    _t3,\n    _t4;\n\nvar DURATION = 550;\nvar DELAY_RIPPLE = 80;\nexports.DELAY_RIPPLE = DELAY_RIPPLE;\nvar enterKeyframe = (0, _system.keyframes)(_t || (_t = _(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  0% {\\n    transform: scale(0);\\n    opacity: 0.1;\\n  }\\n\\n  100% {\\n    transform: scale(1);\\n    opacity: 0.3;\\n  }\\n\"])))));\nvar exitKeyframe = (0, _system.keyframes)(_t2 || (_t2 = _(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  0% {\\n    opacity: 1;\\n  }\\n\\n  100% {\\n    opacity: 0;\\n  }\\n\"])))));\nvar pulsateKeyframe = (0, _system.keyframes)(_t3 || (_t3 = _(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  0% {\\n    transform: scale(1);\\n  }\\n\\n  50% {\\n    transform: scale(0.92);\\n  }\\n\\n  100% {\\n    transform: scale(1);\\n  }\\n\"])))));\nvar TouchRippleRoot = (0, _styled.default)('span', {\n  name: 'MuiTouchRipple',\n  slot: 'Root'\n})({\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  position: 'absolute',\n  zIndex: 0,\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  borderRadius: 'inherit'\n}); // This `styled()` function invokes keyframes. `styled-components` only supports keyframes\n// in string templates. Do not convert these styles in JS object as it will break.\n\nexports.TouchRippleRoot = TouchRippleRoot;\nvar TouchRippleRipple = (0, _styled.default)(_Ripple.default, {\n  name: 'MuiTouchRipple',\n  slot: 'Ripple'\n})(_t4 || (_t4 = _(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n  opacity: 0;\\n  position: absolute;\\n\\n  &.\", \" {\\n    opacity: 0.3;\\n    transform: scale(1);\\n    animation-name: \", \";\\n    animation-duration: \", \"ms;\\n    animation-timing-function: \", \";\\n  }\\n\\n  &.\", \" {\\n    animation-duration: \", \"ms;\\n  }\\n\\n  & .\", \" {\\n    opacity: 1;\\n    display: block;\\n    width: 100%;\\n    height: 100%;\\n    border-radius: 50%;\\n    background-color: currentColor;\\n  }\\n\\n  & .\", \" {\\n    opacity: 0;\\n    animation-name: \", \";\\n    animation-duration: \", \"ms;\\n    animation-timing-function: \", \";\\n  }\\n\\n  & .\", \" {\\n    position: absolute;\\n    /* @noflip */\\n    left: 0px;\\n    top: 0;\\n    animation-name: \", \";\\n    animation-duration: 2500ms;\\n    animation-timing-function: \", \";\\n    animation-iteration-count: infinite;\\n    animation-delay: 200ms;\\n  }\\n\"])), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)), _touchRippleClasses.default.rippleVisible, enterKeyframe, DURATION, function (_ref) {\n  var theme = _ref.theme;\n  return theme.transitions.easing.easeInOut;\n}, _touchRippleClasses.default.ripplePulsate, function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.transitions.duration.shorter;\n}, _touchRippleClasses.default.child, _touchRippleClasses.default.childLeaving, exitKeyframe, DURATION, function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.transitions.easing.easeInOut;\n}, _touchRippleClasses.default.childPulsate, pulsateKeyframe, function (_ref4) {\n  var theme = _ref4.theme;\n  return theme.transitions.easing.easeInOut;\n});\n/**\n * @ignore - internal component.\n *\n * TODO v5: Make private\n */\n\nexports.TouchRippleRipple = TouchRippleRipple;\nvar TouchRipple = /*#__PURE__*/React.forwardRef(function TouchRipple(inProps, ref) {\n  var props = (0, _useThemeProps.default)({\n    props: inProps,\n    name: 'MuiTouchRipple'\n  });\n  var _props$center = props.center,\n      centerProp = _props$center === void 0 ? false : _props$center,\n      _props$classes = props.classes,\n      classes = _props$classes === void 0 ? {} : _props$classes,\n      className = props.className,\n      other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      ripples = _React$useState2[0],\n      setRipples = _React$useState2[1];\n\n  var nextKey = React.useRef(0);\n  var rippleCallback = React.useRef(null);\n  React.useEffect(function () {\n    if (rippleCallback.current) {\n      rippleCallback.current();\n      rippleCallback.current = null;\n    }\n  }, [ripples]); // Used to filter out mouse emulated events on mobile.\n\n  var ignoringMouseDown = React.useRef(false); // We use a timer in order to only show the ripples for touch \"click\" like events.\n  // We don't want to display the ripple for touch scroll events.\n\n  var startTimer = React.useRef(null); // This is the hook called once the previous timeout is ready.\n\n  var startTimerCommit = React.useRef(null);\n  var container = React.useRef(null);\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(startTimer.current);\n    };\n  }, []);\n  var startCommit = React.useCallback(function (params) {\n    var pulsate = params.pulsate,\n        rippleX = params.rippleX,\n        rippleY = params.rippleY,\n        rippleSize = params.rippleSize,\n        cb = params.cb;\n    setRipples(function (oldRipples) {\n      return [].concat(_toConsumableArray(oldRipples), [/*#__PURE__*/(0, _jsxRuntime.jsx)(TouchRippleRipple, {\n        classes: {\n          ripple: (0, _clsx.default)(classes.ripple, _touchRippleClasses.default.ripple),\n          rippleVisible: (0, _clsx.default)(classes.rippleVisible, _touchRippleClasses.default.rippleVisible),\n          ripplePulsate: (0, _clsx.default)(classes.ripplePulsate, _touchRippleClasses.default.ripplePulsate),\n          child: (0, _clsx.default)(classes.child, _touchRippleClasses.default.child),\n          childLeaving: (0, _clsx.default)(classes.childLeaving, _touchRippleClasses.default.childLeaving),\n          childPulsate: (0, _clsx.default)(classes.childPulsate, _touchRippleClasses.default.childPulsate)\n        },\n        timeout: DURATION,\n        pulsate: pulsate,\n        rippleX: rippleX,\n        rippleY: rippleY,\n        rippleSize: rippleSize\n      }, nextKey.current)]);\n    });\n    nextKey.current += 1;\n    rippleCallback.current = cb;\n  }, [classes]);\n  var start = React.useCallback(function () {\n    var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var cb = arguments.length > 2 ? arguments[2] : undefined;\n    var _options$pulsate = options.pulsate,\n        pulsate = _options$pulsate === void 0 ? false : _options$pulsate,\n        _options$center = options.center,\n        center = _options$center === void 0 ? centerProp || options.pulsate : _options$center,\n        _options$fakeElement = options.fakeElement,\n        fakeElement = _options$fakeElement === void 0 ? false : _options$fakeElement;\n\n    if ((event == null ? void 0 : event.type) === 'mousedown' && ignoringMouseDown.current) {\n      ignoringMouseDown.current = false;\n      return;\n    }\n\n    if ((event == null ? void 0 : event.type) === 'touchstart') {\n      ignoringMouseDown.current = true;\n    }\n\n    var element = fakeElement ? null : container.current;\n    var rect = element ? element.getBoundingClientRect() : {\n      width: 0,\n      height: 0,\n      left: 0,\n      top: 0\n    }; // Get the size of the ripple\n\n    var rippleX;\n    var rippleY;\n    var rippleSize;\n\n    if (center || event === undefined || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {\n      rippleX = Math.round(rect.width / 2);\n      rippleY = Math.round(rect.height / 2);\n    } else {\n      var _ref5 = event.touches && event.touches.length > 0 ? event.touches[0] : event,\n          clientX = _ref5.clientX,\n          clientY = _ref5.clientY;\n\n      rippleX = Math.round(clientX - rect.left);\n      rippleY = Math.round(clientY - rect.top);\n    }\n\n    if (center) {\n      rippleSize = Math.sqrt((2 * Math.pow(rect.width, 2) + Math.pow(rect.height, 2)) / 3); // For some reason the animation is broken on Mobile Chrome if the size is even.\n\n      if (rippleSize % 2 === 0) {\n        rippleSize += 1;\n      }\n    } else {\n      var sizeX = Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;\n      var sizeY = Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;\n      rippleSize = Math.sqrt(Math.pow(sizeX, 2) + Math.pow(sizeY, 2));\n    } // Touche devices\n\n\n    if (event != null && event.touches) {\n      // check that this isn't another touchstart due to multitouch\n      // otherwise we will only clear a single timer when unmounting while two\n      // are running\n      if (startTimerCommit.current === null) {\n        // Prepare the ripple effect.\n        startTimerCommit.current = function () {\n          startCommit({\n            pulsate: pulsate,\n            rippleX: rippleX,\n            rippleY: rippleY,\n            rippleSize: rippleSize,\n            cb: cb\n          });\n        }; // Delay the execution of the ripple effect.\n\n\n        startTimer.current = setTimeout(function () {\n          if (startTimerCommit.current) {\n            startTimerCommit.current();\n            startTimerCommit.current = null;\n          }\n        }, DELAY_RIPPLE); // We have to make a tradeoff with this value.\n      }\n    } else {\n      startCommit({\n        pulsate: pulsate,\n        rippleX: rippleX,\n        rippleY: rippleY,\n        rippleSize: rippleSize,\n        cb: cb\n      });\n    }\n  }, [centerProp, startCommit]);\n  var pulsate = React.useCallback(function () {\n    start({}, {\n      pulsate: true\n    });\n  }, [start]);\n  var stop = React.useCallback(function (event, cb) {\n    clearTimeout(startTimer.current); // The touch interaction occurs too quickly.\n    // We still want to show ripple effect.\n\n    if ((event == null ? void 0 : event.type) === 'touchend' && startTimerCommit.current) {\n      startTimerCommit.current();\n      startTimerCommit.current = null;\n      startTimer.current = setTimeout(function () {\n        stop(event, cb);\n      });\n      return;\n    }\n\n    startTimerCommit.current = null;\n    setRipples(function (oldRipples) {\n      if (oldRipples.length > 0) {\n        return oldRipples.slice(1);\n      }\n\n      return oldRipples;\n    });\n    rippleCallback.current = cb;\n  }, []);\n  React.useImperativeHandle(ref, function () {\n    return {\n      pulsate: pulsate,\n      start: start,\n      stop: stop\n    };\n  }, [pulsate, start, stop]);\n  return /*#__PURE__*/(0, _jsxRuntime.jsx)(TouchRippleRoot, (0, _extends2.default)({\n    className: (0, _clsx.default)(_touchRippleClasses.default.root, classes.root, className),\n    ref: container\n  }, other, {\n    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactTransitionGroup.TransitionGroup, {\n      component: null,\n      exit: true,\n      children: ripples\n    })\n  }));\n});\n\"production\" !== \"production\" ? TouchRipple.propTypes = {\n  /**\n   * If `true`, the ripple starts at the center of the component\n   * rather than at the point of interaction.\n   */\n  center: _propTypes.default.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: _propTypes.default.object,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string\n} : void 0;\nvar _default = TouchRipple;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"a9133a20955d02b9c120563846e18e7b","cacheData":{"env":{"NODE_ENV":"production"}}}