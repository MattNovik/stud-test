{"id":"tE4I","dependencies":[{"name":"C:\\projects\\stud-test\\package.json","includedInParent":true,"mtime":1672148335290},{"name":"C:\\projects\\stud-test\\node_modules\\lodash-es\\package.json","includedInParent":true,"mtime":1666601424776},{"name":"./_hashClear.js","loc":{"line":1,"column":22,"index":22},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_Hash.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_hashClear.js"},{"name":"./_hashDelete.js","loc":{"line":2,"column":23,"index":64},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_Hash.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_hashDelete.js"},{"name":"./_hashGet.js","loc":{"line":3,"column":20,"index":104},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_Hash.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_hashGet.js"},{"name":"./_hashHas.js","loc":{"line":4,"column":20,"index":141},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_Hash.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_hashHas.js"},{"name":"./_hashSet.js","loc":{"line":5,"column":20,"index":178},"parent":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_Hash.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash-es\\_hashSet.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _hashClear = _interopRequireDefault(require(\"./_hashClear.js\"));\n\nvar _hashDelete = _interopRequireDefault(require(\"./_hashDelete.js\"));\n\nvar _hashGet = _interopRequireDefault(require(\"./_hashGet.js\"));\n\nvar _hashHas = _interopRequireDefault(require(\"./_hashHas.js\"));\n\nvar _hashSet = _interopRequireDefault(require(\"./_hashSet.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = _hashClear.default;\nHash.prototype['delete'] = _hashDelete.default;\nHash.prototype.get = _hashGet.default;\nHash.prototype.has = _hashHas.default;\nHash.prototype.set = _hashSet.default;\nvar _default = Hash;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"58426f5f2052db9c9d585ddc6db6f0a9","cacheData":{"env":{}}}