{"id":"eAGn","dependencies":[{"name":"C:\\projects\\stud-test\\package.json","includedInParent":true,"mtime":1672313724264},{"name":"./index.scss","loc":{"line":1,"column":7,"index":7},"parent":"C:\\projects\\stud-test\\src\\components\\CommentField\\index.js","resolved":"C:\\projects\\stud-test\\src\\components\\CommentField\\index.scss"},{"name":"../../img/upload.svg","loc":{"line":2,"column":45,"index":69},"parent":"C:\\projects\\stud-test\\src\\components\\CommentField\\index.js","resolved":"C:\\projects\\stud-test\\src\\img\\upload.svg"},{"name":"../../img/close.svg","loc":{"line":3,"column":44,"index":138},"parent":"C:\\projects\\stud-test\\src\\components\\CommentField\\index.js","resolved":"C:\\projects\\stud-test\\src\\img\\close.svg"},{"name":"@mui/material/TextField","loc":{"line":4,"column":22,"index":184},"parent":"C:\\projects\\stud-test\\src\\components\\CommentField\\index.js","resolved":"C:\\projects\\stud-test\\node_modules\\@mui\\material\\esm\\TextField\\index.js"},{"name":"@mui/material/styles","loc":{"line":5,"column":23,"index":235},"parent":"C:\\projects\\stud-test\\src\\components\\CommentField\\index.js","resolved":"C:\\projects\\stud-test\\node_modules\\@mui\\material\\esm\\styles\\index.js"},{"name":"nanoid","loc":{"line":6,"column":23,"index":283},"parent":"C:\\projects\\stud-test\\src\\components\\CommentField\\index.js","resolved":"C:\\projects\\stud-test\\node_modules\\nanoid\\index.browser.js"},{"name":"react","loc":{"line":7,"column":25,"index":319},"parent":"C:\\projects\\stud-test\\src\\components\\CommentField\\index.js","resolved":"C:\\projects\\stud-test\\node_modules\\react\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"./index.scss\");\n\nvar _upload = require(\"../../img/upload.svg\");\n\nvar _close = require(\"../../img/close.svg\");\n\nvar _TextField = _interopRequireDefault(require(\"@mui/material/TextField\"));\n\nvar _styles = require(\"@mui/material/styles\");\n\nvar _nanoid = require(\"nanoid\");\n\nvar _react = require(\"react\");\n\nvar _templateObject;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nvar CustomTextFieldForm = (0, _styles.styled)(_TextField.default)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  background-color: #f1f3f8;\\n  border-radius: 6px;\\n  max-height: 50px;\\n\\n  & .MuiInputBase-root {\\n    padding-right: 22px;\\n  }\\n\\n  & .MuiFormLabel-filled {\\n    transform: translate(10px, -18px) scale(0.75);\\n    color: #ffffff;\\n  }\\n\\n  & .MuiFormLabel-filled.Mui-focused ~ .MuiInputBase-root .icon-close {\\n    display: block;\\n  }\\n\\n  & .MuiFormLabel-root {\\n    font-family: 'Source Sans Pro';\\n    font-weight: 400;\\n    font-size: 17px;\\n    line-height: 17px;\\n    color: #9eaabd;\\n    transform: translate(22px, 18px);\\n  }\\n\\n  & .MuiFormLabel-filled {\\n    transform: translate(22px, -18px) scale(0.75);\\n    color: #ffffff;\\n  }\\n\\n  & .MuiFormLabel-root.Mui-focused {\\n    display: block;\\n    transform: translate(10px, -18px) scale(0.75);\\n    color: #ffffff;\\n  }\\n\\n  & .MuiInputBase-input {\\n    height: auto;\\n    font-family: 'Source Sans Pro';\\n    font-weight: 400;\\n    font-size: 17px;\\n    line-height: 17px;\\n    color: #000000;\\n    padding: 14px 22px 16px;\\n    background-color: transparent;\\n  }\\n\\n  & input:-webkit-autofill,\\n  & input:-webkit-autofill:focus {\\n    transition: background-color 600000s 0s;\\n  }\\n\\n  & fieldset {\\n    top: 0;\\n    padding: 0;\\n    border: solid 1px #f1f3f8;\\n  }\\n\\n  & .MuiInputBase-root.Mui-focused {\\n    & fieldset {\\n      top: 0;\\n      border: solid 1px #000;\\n      box-sizing: border-box;\\n    }\\n  }\\n\\n  & legend {\\n    display: none;\\n  }\\n\\n  & .icon-close {\\n    display: none;\\n    cursor: pointer;\\n  }\\n\"])));\n\nvar CommentField = function CommentField(_ref) {\n  var value = _ref.value,\n      files = _ref.files,\n      customChange = _ref.customChange,\n      customUploadFiles = _ref.customUploadFiles;\n\n  var _useState = (0, _react.useState)([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      listLoadedFiles = _useState2[0],\n      setListLoadedFiles = _useState2[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment-field\"\n  }, /*#__PURE__*/React.createElement(CustomTextFieldForm, {\n    fullWidth: true,\n    id: \"outlined-required\",\n    name: \"comments\",\n    label: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\",\n    value: value,\n    onChange: customChange,\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(\"div\", {\n        className: \"comment-field__loader-wrapper\"\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        id: \"file\",\n        className: \"comment-field__input-file\",\n        multiple: true,\n        onChange: function onChange(e) {\n          var filesList = e.target.files;\n          var newArray = [];\n\n          for (var i = 0, numFiles = filesList.length; i < numFiles; i++) {\n            newArray.push(filesList[i]);\n          }\n\n          setListLoadedFiles(newArray);\n          customUploadFiles(newArray);\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"file\"\n      }, /*#__PURE__*/React.createElement(_upload.ReactComponent, {\n        className: \"icon-upload\"\n      })))\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment-field__loaded-files\"\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"comment-field__loaded-list\"\n  }, listLoadedFiles.map(function (item) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"comment-field__file\",\n      key: (0, _nanoid.nanoid)()\n    }, /*#__PURE__*/React.createElement(\"span\", null, item.name + ' - загружено'), /*#__PURE__*/React.createElement(_close.ReactComponent, {\n      \"data-value\": item.name,\n      className: \"comment-field__icon-close\",\n      onClick: function onClick(e) {\n        var newArray = listLoadedFiles;\n        newArray.splice(newArray.indexOf(e.target.closest('svg').dataset.value), 1);\n        setListLoadedFiles(newArray);\n        customUploadFiles(newArray);\n      }\n    }));\n  }))));\n};\n\nvar _default = CommentField;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"bbd05a1a36531f95831ce37a9201f9c6","cacheData":{"env":{}}}