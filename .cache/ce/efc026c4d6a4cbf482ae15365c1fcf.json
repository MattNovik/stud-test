{"id":"ibmM","dependencies":[{"name":"C:\\projects\\stud-test\\package.json","includedInParent":true,"mtime":1672148335290},{"name":"C:\\projects\\stud-test\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1666601426036},{"name":"./isArray","loc":{"line":1,"column":22,"index":22},"parent":"C:\\projects\\stud-test\\node_modules\\lodash\\_isKey.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash\\isArray.js"},{"name":"./isSymbol","loc":{"line":2,"column":23,"index":59},"parent":"C:\\projects\\stud-test\\node_modules\\lodash\\_isKey.js","resolved":"C:\\projects\\stud-test\\node_modules\\lodash\\isSymbol.js"}],"generated":{"js":"var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n"},"sourceMaps":null,"error":null,"hash":"250b9ab0018b99f7338ff9a01c491d41","cacheData":{"env":{}}}